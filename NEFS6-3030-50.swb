dim swApp
dim storePath
dim sw2003api
dim sw2007api
dim docVisible
#If VBA7 Then
Private Type BROWSEINFO
   hwndOwner       As LongPtr
   pIDLRoot        As Long
   pszDisplayName  As String
   lpszTitle       As String
   ulFlags         As Long
   lpfnCallback    As LongPtr
   lParam          As LongPtr
  iImage          As Long
End Type
Private Declare PtrSafe Function SHBrowseForFolder Lib "Shell32" (lpbi As BROWSEINFO) As Long
Private Declare PtrSafe Function SHGetPathFromIDList Lib "Shell32" (ByVal pidList As Long, ByVal lpBuffer As String) As Long
Private Declare PtrSafe Sub CoTaskMemFree Lib "ole32" (ByVal hMem As Long)
#Else
Private Type BROWSEINFO
   hwndOwner       As Long
   pIDLRoot        As Long
   pszDisplayName  As Long
   lpszTitle       As String
   ulFlags         As Long
   lpfnCallback    As Long
   lParam          As Long
  iImage          As Long
End Type
Private Declare Function SHBrowseForFolder Lib "Shell32" (lpbi As BROWSEINFO) As Long
Private Declare Function SHGetPathFromIDList Lib "Shell32" (ByVal pidList As Long, ByVal lpBuffer As String) As Long
Private Declare Sub CoTaskMemFree Lib "ole32" (ByVal hMem As Long)
#End If
Private Const MAX_PATH = 260
'Directories only
Private Const BIF_RETURNONLYFSDIRS = &H1&
'Windows 2000 (Shell32.dll 5.0) extended dialog
Private Const BIF_NEWDIALOGSTYLE = &H40
' show edit box
Private Const BIF_EDITBOX = &H10&
Function getFeatureByTypeOcc(model, typ, nr)  
  Set feat = model.FirstFeature ' Get the 1st feature in part
  Set res = Nothing
  Count = 0
  Do While Not feat Is Nothing ' While we have a valid feature
    If feat.GetTypeName() = typ Then
      Count = Count + 1
      If Count = nr Then
        Set res = feat
        Exit Do
      End If
    End If
    Set feat = feat.GetNextFeature() ' Get the next feature
  Loop ' Continue until no more
  Set getFeatureByTypeOcc = res
End Function
Function getLastFeatureByType(model,typ)  
  Set feat = model.FirstFeature ' Get the 1st feature in part
  Set res = Nothing
  Count = 0
  Do While Not feat Is Nothing ' While we have a valid feature
    If feat.GetTypeName() = typ Then
      Set res = feat
    End If
    Set feat = feat.GetNextFeature() ' Get the next feature
  Loop ' Continue until no more
  Set getLastFeatureByType = res
End Function
' this code with copy a matrix to a other
Function copyMat4x4(source)
Dim res(0 To 15) As Double
For i = 0 To 15
 res(i) = source(i)
Next
copyMat4x4 = res
End Function

' This code creates a mat from a sw mat
Function createMatFromSWMat(source)
 Dim res(0 To 15) As Double
 res(0) = source(0)
 res(1) = source(1)
 res(2) = source(2)
 res(3) = 0
 res(4) = source(3)
 res(5) = source(4)
 res(6) = source(5)
 res(7) = 0
 res(8) = source(6)
 res(9) = source(7)
 res(10) = source(8)
 res(11) = 0
 res(12) = source(9)
 res(13) = source(10)
 res(14) = source(11)
 res(15) = source(12)
 createMatFromSWMat = res
End Function
Function createSWMatFromMat(source)
 Dim res(0 To 15) As Double
 res(0) = source(0)
 res(1) = source(1)
 res(2) = source(2)
 res(3) = source(4)
 res(4) = source(5)
 res(5) = source(6)
 res(6) = source(8)
 res(7) = source(9)
 res(8) = source(10)
 res(9) = source(12)
 res(10) = source(13)
 res(11) = source(14)
 res(12) = source(15)
 res(13) = 0
 res(14) = 0
 res(15) = 0
 createSWMatFromMat = res
End Function
Function createMat4x4FromValues(x1,x2,x3,y1,y2,y3,z1,z2,z3,t1,t2,t3)
 Dim res(0 To 15) As Double
 res(0) = x1
 res(1) = x2
 res(2) = x3
 res(3) = 0
 res(4) = y1
 res(5) = y2
 res(6) = y3
 res(7) = 0
 res(8) = z1
 res(9) = z2
 res(10) =z3
 res(11) = 0
 res(12) = t1
 res(13) = t2
 res(14) = t3
 res(15) = 1
 createMat4x4FromValues = res
End Function
' this code will mult a common mat with any other stuff
Function multMatMat(ld, xld, yld, rd, xrd, yrd)
  mulRes = yld * xrd
  'Dim od(0 To 0) As Variant
  ReDim od(mulRes - 1) As Double
  For i = 0 To mulRes - 1
   od(i) = 0#
  Next
  y = 0
  While y < yld
    x = 0
    While x < xrd
      i = 0
      While i < xld
       od(x * yld + y) = od(x * yld + y) + ld(i * yld + y) * rd(x * yrd + i)
       i = i + 1
      Wend
      x = x + 1
    Wend
    y = y + 1
  Wend
  multMatMat = od

End Function
' this code will mult a vector with a matrix
Function mulMat4x4Values3d(mat, x,y,z)
  tmp = createVec4d(x, y, z, 1)
  res = multMatMat(mat, 4, 4, tmp, 1, 3)
  mulMat4x4Values3d = createVec3d(res(0), res(1), res(2))
End Function
Function mulMat4x4Vec3d(mat, vec)
  tmp = createVec4d(vec(0), vec(1), vec(2), 1)
  res = multMatMat(mat, 4, 4, tmp, 1, 3)
  mulMat4x4Vec3d = createVec3d(res(0), res(1), res(2))
End Function
Function mulMat4x4Mat4x4(mat1, mat2)
  mulMat4x4Mat4x4 = multMatMat(mat1, 4, 4, mat2, 4, 4)
End Function
' create a 4x4 matrix
Function createMat4x4()
 Dim res(0 To 15) As Double
 for i = 0 to 15 
 res(i) = 0
 next
 createMat4x4 = res
End Function
Function createMat4x4Ident()
 Dim res(0 To 15) As Double
 res(0) = 1
 res(5) = 1
 res(10) = 1
 res(15) = 1
 res(1) = 0
 res(2) = 0
 res(3) = 0
 res(4) = 0
 res(6) = 0
 res(7) = 0
 res(8) = 0
 res(9) = 0
 res(11) = 0
 res(12) = 0
 res(13) = 0
 res(14) = 0
 createMat4x4Ident = res
End Function
' this function create a new vector
Function createVec3d(x, y, z)
 Dim res(0 To 2) As Double
 res(0) = x
 res(1) = y
 res(2) = z
 createVec3d = res
End Function
' this function create a new vector
Function createVec4d(x, y, z, w)
 Dim res(0 To 3) As Double
 res(0) = x
 res(1) = y
 res(2) = z
 res(3) = w
 createVec4d = res
End Function

Function getMatTVec(mat)
 getMatTVec = createVec3d(mat(12), mat(13), mat(14))
End Function

Sub setMatTVec(mat, v)
 mat(12) = v(0)
 mat(13) = v(1)
 mat(14) = v(2)
End Sub
Sub setMatXVec(mat, v)
 mat(0) = v(0)
 mat(1) = v(1)
 mat(2) = v(2)
End Sub
Sub setMatYVec(mat, v)
 mat(4) = v(0)
 mat(5) = v(1)
 mat(6) = v(2)
End Sub
Sub setMatZVec(mat, v)
 mat(8) = v(0)
 mat(9) = v(1)
 mat(10) = v(2)
End Sub
Sub setMatScale(mat, s)
 mat(15) = s
End Sub
Function getMatXVec(mat)
 getMatXVec = createVec3d(mat(0), mat(1), mat(2))
End Function
Function getMatYVec(mat)
 getMatYVec = createVec3d(mat(4), mat(5), mat(6))
End Function
Function getMatZVec(mat)
 getMatZVec = createVec3d(mat(8), mat(9), mat(10))
End Function

Function negVec3d(v)
 negVec3d = createVec3d(-v(0), -v(1), -v(2))
End Function
Function scaleVec3d(v,s)
 scaleVec3d = createVec3d(v(0)*s,v(1)*s,v(2)*s)
End Function
' invert a 4x4 matrix
Function invMat4x4(source)
target = copyMat4x4(source)
setMatTVec target, createVec3d(0, 0, 0)
 target(1) = source(4)
 target(4) = source(1)
 target(2) = source(8)
 target(8) = source(2)
 target(6) = source(9)
 target(9) = source(6)
 setMatScale target,1
 t = getMatTVec(source)
 v = mulMat4x4Vec3d(target, t)
 setMatTVec target, negVec3d(v)
 invMat4x4 = target
End Function
Function getFaceFromModel(part, pos, normal)
 Dim partBodies As Variant
 partBodies = part.GetBodies(swSolidBody)
 For k = LBound(partBodies) To UBound(partBodies)
   found = 0
   Dim body As Object
   Set body = partBodies(k)
   Set face = body.GetFirstFace()
   getFaceFromModel = noting
   Do While Not face Is Nothing ' While we have a valid feature
     Set sur = face.GetSurface()
     If sur.IsPlane() Then
       planePara = sur.PlaneParams
       faceNormal = face.normal
       nTest = faceNormal(0) * normal(0) + faceNormal(1) * normal(1) + faceNormal(2) * normal(2)
       If nTest > 1 - 0.000001 Then
         ' check projection
         closeRes = face.GetClosestPointOn(pos(0), pos(1), pos(2))
         dTest = (pos(0) - closeRes(0)) * (pos(0) - closeRes(0)) + (pos(1) - closeRes(1)) * (pos(1) - closeRes(1)) + (pos(2) - closeRes(2)) * (pos(2) - closeRes(2))
         If dTest < 0.000001 Then
           Set getFaceFromModel = face
           found=1
           Exit Do
         End If
       End If
     else
       If sur.IsCylinder() then
         closeRes = face.GetClosestPointOn(pos(0), pos(1), pos(2))
         dTest = (pos(0) - closeRes(0)) * (pos(0) - closeRes(0)) + (pos(1) - closeRes(1)) * (pos(1) - closeRes(1)) + (pos(2) - closeRes(2)) * (pos(2) - closeRes(2))
         If dTest < 0.00000001 Then
           res=sur.EvaluateAtPoint(closeRes(0),closeRes(1),closeRes(2))
           nTest=res(0)*normal(0)+res(1)*normal(1)+res(2)*normal(2)
           if nTest>1-0.00000001 then
             Set getFaceFromModel = face
             found=1
             Exit Do
           End if
         End if
       End if
     End if
     Set face = face.GetNextFace ' Get the next Face
   Loop
   If (found = 1) Then
     Exit For
   End If
 Next k
End Function
Function getEdgeFromModel(part, pos,byref edgeRet)
 Dim partBodies As Variant
 partBodies = part.GetBodies(swSolidBody)
 For k = LBound(partBodies) To UBound(partBodies)
   Dim body As Object
   Set body = partBodies(k)
   edges= body.GetEdges()
   start= LBound(edges)
   ende = UBound(edges)
   For i = start To ende
     Set edge = edges(i)
     closeRes=edge.GetClosestPointOn(pos(0),pos(1),pos(2))
     dTest = (pos(0) - closeRes(0)) * (pos(0) - closeRes(0)) + (pos(1) - closeRes(1)) * (pos(1) - closeRes(1)) + (pos(2) - closeRes(2)) * (pos(2) - closeRes(2))
     If dTest < 0.00000001 Then
       set edgeRet=edge
       getEdgeFromModel=true
       exit function
     End If
   Next i
 Next k
 getEdgeFromModel=false
End Function
sub cLn(part,wMat,x1,y1,x2,y2)
pk1=mulMat4x4Values3d(wMat,x1,y1,0)
pk2=mulMat4x4Values3d(wMat,x2,y2,0)
Part.CreateLine2 pk1(0),pk1(1),0,pk2(0),pk2(1),0
end sub
sub cCLn(part,wMat,x1,y1,x2,y2)
pk1=mulMat4x4Values3d(wMat,x1,y1,0)
pk2=mulMat4x4Values3d(wMat,x2,y2,0)
Part.CreateCenterLineVB pk1(0),pk1(1),0,pk2(0),pk2(1),0
end sub
sub cArc(part,wMat,x1,y1,x2,y2,x3,y3)
pk1=mulMat4x4Values3d(wMat,x1,y1,0)
pk2=mulMat4x4Values3d(wMat,x2,y2,0)
pk3=mulMat4x4Values3d(wMat,x3,y3,0)
Part.Create3PointArc pk1(0),pk1(1),0,pk3(0),pk3(1),0,pk2(0),pk2(1),0
end sub
sub cCir(part,wMat,x1,y1,rad)
pk1=mulMat4x4Values3d(wMat,x1,y1,0)
Part.CreateCircleByRadius2 pk1(0),pk1(1),0,rad
end sub
Public Function BrowseForFolder() As String
  Dim tBI         As BROWSEINFO
  Dim lngPIDL     As Long
  Dim strPath     As String
  With tBI
    .lpszTitle = ""
    .ulFlags = BIF_RETURNONLYFSDIRS Or BIF_NEWDIALOGSTYLE Or BIF_EDITBOX
  End With
  lngPIDL = SHBrowseForFolder(tBI)
  If (lngPIDL <> 0) Then
    ' get path from ID list
    strPath = Space$(MAX_PATH)
    SHGetPathFromIDList lngPIDL, strPath
    strPath = Left$(strPath, InStr(strPath, Chr$(0)) - 1)
    ' release list
    CoTaskMemFree lngPIDL
  End If
  BrowseForFolder = strPath
End Function
Sub CreatePart0
dim error as long
set res=swApp.OpenDoc2 ( storePath & "NEFS6-3030-50.sldprt",1,true,false,true,error)
if not res is nothing then
 exit sub
end if
set part=swApp.NewPart
part.SetAddToDB(true)
part.SetDisplayWhenAdded (false)
part.AddCustomInfo3 "", "NN", 30, "NEFS6-3030, NEFSB6-3030, EFS6-3030, EFSB6-3030, HFS6-3030, HFSB6-3030, CAF6-3030, HFSY6-3030, NFSL6-3030,  HFSL6-3030, HFSLB6-3030, GFS6-3030"
part.AddCustomInfo3 "", "NT", 30, "HFS6 Series Aluminum Extrusions 30 Square -1 Slot-"
part.AddCustomInfo3 "", "NB", 30, "NEFS6-3030-50"
part.AddCustomInfo3 "", "NBSYN", 30, "$PN."
part.AddCustomInfo3 "", "LINA", 30, "NEFS6-3030-50"
part.AddCustomInfo3 "", "PN", 30, "NEFS6-3030-50"
part.AddCustomInfo3 "", "TPS", 30, "NEFS6-3030"
part.AddCustomInfo3 "", "MAT", 30, "6063-T5 Aluminum Alloy"
part.AddCustomInfo3 "", "ST", 30, "Clear Anodize"
part.AddCustomInfo3 "", "L", 30, "50.0"
part.AddCustomInfo3 "", "MASS", 30, "0.80"
part.AddCustomInfo3 "", "SA", 30, "296"
part.AddCustomInfo3 "", "LX", 30, "2.85x10^4"
part.AddCustomInfo3 "", "LY", 30, "2.85x10^4"
part.AddCustomInfo3 "", "ALT1", 30, "w/o End Tapping"
part.AddCustomInfo3 "", "M1", 30, "0"
part.AddCustomInfo3 "", "DPL1", 30, "0"
part.AddCustomInfo3 "", "DPR1", 30, "0"
part.AddCustomInfo3 "", "ALT2", 30, "w/o End Tapping (Heli-Coil Insert)"
part.AddCustomInfo3 "", "M2", 30, "0"
part.AddCustomInfo3 "", "DP2", 30, "0"
part.AddCustomInfo3 "", "ALT3", 30, "N/A"
part.AddCustomInfo3 "", "M3", 30, "0"
part.AddCustomInfo3 "", "DP3", 30, "0"
part.AddCustomInfo3 "", "ALT4", 30, "w/o SC (High Precision Cut)"
part.AddCustomInfo3 "", "ALT5", 30, "w/o 45 Degree Cut"
part.AddCustomInfo3 "", "CP5", 30, "N/A"
part.AddCustomInfo3 "", "DL5", 30, "N/A"
part.AddCustomInfo3 "", "DR5", 30, "N/A"
part.AddCustomInfo3 "", "ALT6", 30, "w/o Fastening Location Wrench Access Hole Alterations"
part.AddCustomInfo3 "", "ALT9", 30, "w/o Location Specified Wrench Access Hole Alteratons (Horizontal)"
part.AddCustomInfo3 "", "ALT10", 30, "w/o Location Specified Wrench Access Hole Alteratons (Vertical)"
part.AddCustomInfo3 "", "ALT11", 30, "w/o Location Specified Wrench Access Hole Alteratons (Crisscross)"
part.AddCustomInfo3 "", "DD6SE", 30, "N/A"
part.AddCustomInfo3 "", "DD6", 30, "0"
part.AddCustomInfo3 "", "HP6", 30, "N/A"
part.AddCustomInfo3 "", "NHL6", 30, "N/A"
part.AddCustomInfo3 "", "DL6", 30, "N/A"
part.AddCustomInfo3 "", "NHR6", 30, "N/A"
part.AddCustomInfo3 "", "DR6", 30, "N/A"
part.AddCustomInfo3 "", "HL6D", 30, "0"
part.AddCustomInfo3 "", "HR6D", 30, "0"
part.AddCustomInfo3 "", "J6D", 30, "0"
part.AddCustomInfo3 "", "K6D", 30, "0"
part.AddCustomInfo3 "", "ALT7", 30, "N/A"
part.AddCustomInfo3 "", "ALT8", 30, "N/A"
part.AddCustomInfo3 "", "NH9", 30, "0"
part.AddCustomInfo3 "", "AH", 30, "0.0"
part.AddCustomInfo3 "", "BH", 30, "0.0"
part.AddCustomInfo3 "", "CH", 30, "0.0"
part.AddCustomInfo3 "", "DH", 30, "0.0"
part.AddCustomInfo3 "", "EH", 30, "0.0"
part.AddCustomInfo3 "", "NH10", 30, "0"
part.AddCustomInfo3 "", "AV", 30, "0.0"
part.AddCustomInfo3 "", "BV", 30, "0.0"
part.AddCustomInfo3 "", "CV", 30, "0.0"
part.AddCustomInfo3 "", "DV", 30, "0.0"
part.AddCustomInfo3 "", "EV", 30, "0.0"
part.AddCustomInfo3 "", "NH11", 30, "0"
part.AddCustomInfo3 "", "AP", 30, "0.0"
part.AddCustomInfo3 "", "BP", 30, "0.0"
part.AddCustomInfo3 "", "CP", 30, "0.0"
part.AddCustomInfo3 "", "DP", 30, "0.0"
part.AddCustomInfo3 "", "EP", 30, "0.0"
part.AddCustomInfo3 "", "ALT12", 30, "w/o Counterbore Hole in Specified Position (Vertical)"
part.AddCustomInfo3 "", "ALT13", 30, "w/o Counterbore Hole in Specified Position (Horizontal)"
part.AddCustomInfo3 "", "Z", 30, "N/A"
part.AddCustomInfo3 "", "DD12", 30, "0.0"
part.AddCustomInfo3 "", "DD112", 30, "0.0"
part.AddCustomInfo3 "", "NH12", 30, "0"
part.AddCustomInfo3 "", "XA", 30, "0.0"
part.AddCustomInfo3 "", "XB", 30, "0.0"
part.AddCustomInfo3 "", "XC", 30, "0.0"
part.AddCustomInfo3 "", "XD", 30, "0.0"
part.AddCustomInfo3 "", "XE", 30, "0.0"
part.AddCustomInfo3 "", "NH13", 30, "0"
part.AddCustomInfo3 "", "YA", 30, "0.0"
part.AddCustomInfo3 "", "YB", 30, "0.0"
part.AddCustomInfo3 "", "YC", 30, "0.0"
part.AddCustomInfo3 "", "YD", 30, "0.0"
part.AddCustomInfo3 "", "YE", 30, "0.0"
part.AddCustomInfo3 "", "ALT14", 30, "w/o D Type Hole Alteration"
part.AddCustomInfo3 "", "HP14", 30, "N/A"
part.AddCustomInfo3 "", "DL14", 30, "N/A"
part.AddCustomInfo3 "", "DR14", 30, "N/A"
part.AddCustomInfo3 "", "H14", 30, "0"
part.AddCustomInfo3 "", "D14", 30, "0.0"
part.AddCustomInfo3 "", "ALT15", 30, "w/o S Type Hole Alteration"
part.AddCustomInfo3 "", "HP15", 30, "N/A"
part.AddCustomInfo3 "", "DL15", 30, "N/A"
part.AddCustomInfo3 "", "DR15", 30, "N/A"
part.AddCustomInfo3 "", "H15", 30, "0"
part.AddCustomInfo3 "", "D115", 30, "0.0"
part.AddCustomInfo3 "", "D215", 30, "0.0"
part.AddCustomInfo3 "", "ALT16", 30, "w/o M Type Hole Alteration"
part.AddCustomInfo3 "", "HP16", 30, "N/A"
part.AddCustomInfo3 "", "DL16", 30, "N/A"
part.AddCustomInfo3 "", "DR16", 30, "N/A"
part.AddCustomInfo3 "", "H116", 30, "0"
part.AddCustomInfo3 "", "D16", 30, "0.0"
part.AddCustomInfo3 "", "ALT17", 30, "w/o L Type Hole Alteration (Top)"
part.AddCustomInfo3 "", "HQ17", 30, "0"
part.AddCustomInfo3 "", "JLP", 30, "0"
part.AddCustomInfo3 "", "D17", 30, "0.0"
part.AddCustomInfo3 "", "ALT19", 30, "N/A"
part.AddCustomInfo3 "", "M19", 30, "0"
part.AddCustomInfo3 "", "DP19", 30, "0"
part.AddCustomInfo3 "", "ALT20", 30, "w/o CW (End Face C Chamfering)"
part.AddCustomInfo3 "", "SUPPLIER", 30, "MISUMI"
part.AddCustomInfo3 "", "ARTICLENO", 30, "NEFS6-3030-50"
part.AddCustomInfo3 "", "BOMINFO", 30, "NEFS6-3030-50"
part.AddCustomInfo3 "", "CREATOR", 30, "CADENAS GmbH"
part.AddCustomInfo3 "", "IsFastener", 30, "0"
part.SummaryInfo(0)="NEFS6-3030-50"
part.SummaryInfo(4)="HFS6 Series Aluminum Extrusions 30 Square -1 Slot-"
part.SummaryInfo(2)="Cadenas PARTsolutions"
valRGB=part.MaterialPropertyValues
valRGB(0)=0.68999999761581
valRGB(1)=0.68999999761581
valRGB(2)=0.68999999761581
part.MaterialPropertyValues=valRGB
Dim featMgr as object
if (sw2003api=1) then
  set featMgr=part.FeatureManager
End If
part.CreatePlaneFixed createVec3d(0,0,0),createVec3d(1,0,0),createVec3d(0,1,0),1
part.BlankRefGeom
set feat5=getLastFeatureByType(part,"RefPlane")
feat5.select false
codeBag0 part
set feat5=getLastFeatureByType(part,"ProfileFeature")
feat5.select false
if (sw2003api=0) then
  part.FeatureExtrusion 1,0,1,0,0,0.05,0.05,1,1,0,0,0,0,0,0
else
  featMgr.FeatureExtrusion 1,0,1,0,0,0.05,0.05,1,1,0,0,0,0,0,0,0,0,1,1,1
end if
part.CreatePlaneFixed createVec3d(0,0,0),createVec3d(1,0,0),createVec3d(0,1,0),1
part.BlankRefGeom
set feat8=getLastFeatureByType(part,"RefPlane")
feat8.select false
codeBag1 part
set feat8=getLastFeatureByType(part,"ProfileFeature")
feat8.select false
if (sw2003api=0) then
  part.FeatureCut 1,0,0,0,0,0.05,0.05,1,1,0,0,0,0,0,0
else
  featMgr.FeatureCut 1,0,0,0,0,0.05,0.05,1,1,0,0,0,0,0,0,0,0,0,1,1
end if
part.SetDisplayWhenAdded (true)
part.SetAddToDB(false)
part.EditRebuild3
part.Rebuild swRebuildAll
part.SaveAs2 storePath & "NEFS6-3030-50.sldprt",0,0,false
End Sub
sub codeBag0(part)
Part.InsertSketch
Set swActiveMat = Part.GetActiveSketch()
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
cLn part,wMat,-0.015,0.004,-0.013,0.004
cLn part,wMat,-0.013,0.004,-0.013,0.00825
cLn part,wMat,-0.013,0.00825,-0.0096642135623731,0.00825
cLn part,wMat,-0.0096642135623731,0.00825,-0.006,0.0045857864376269
cLn part,wMat,-0.006,0.0045857864376269,-0.006,0.00051961524227066
cLn part,wMat,-0.006,0.00051961524227066,-0.0057,0
cLn part,wMat,-0.0057,0,-0.0059330127018922,-0.00040358983848622
cArc part,wMat,-0.0059330127018922,-0.00040358983848622,-0.006,-0.00065358983848623,-0.0059330127018922,-0.00090358983848623
cLn part,wMat,-0.0059330127018922,-0.00090358983848623,-0.0057509765924841,-0.0012188856287933
cLn part,wMat,-0.0057509765924841,-0.0012188856287933,-0.006,-0.0025
cLn part,wMat,-0.006,-0.0025,-0.006,-0.0045857864376269
cLn part,wMat,-0.006,-0.0045857864376269,-0.0096642135623731,-0.00825
cLn part,wMat,-0.0096642135623731,-0.00825,-0.013,-0.00825
cLn part,wMat,-0.013,-0.00825,-0.013,-0.004
cLn part,wMat,-0.013,-0.004,-0.015,-0.004
cLn part,wMat,-0.015,-0.004,-0.015,-0.013
cArc part,wMat,-0.015,-0.013,-0.014414213562373,-0.014414213562373,-0.013,-0.015
cLn part,wMat,-0.013,-0.015,-0.004,-0.015
cLn part,wMat,-0.004,-0.015,-0.004,-0.013
cLn part,wMat,-0.004,-0.013,-0.00825,-0.013
cLn part,wMat,-0.00825,-0.013,-0.00825,-0.0096642135623731
cLn part,wMat,-0.00825,-0.0096642135623731,-0.0045857864376269,-0.006
cLn part,wMat,-0.0045857864376269,-0.006,-0.00051961524227066,-0.006
cLn part,wMat,-0.00051961524227066,-0.006,-3.3306690738755e-19,-0.0057
cLn part,wMat,-3.3306690738755e-19,-0.0057,0.00040358983848622,-0.0059330127018922
cArc part,wMat,0.00040358983848622,-0.0059330127018922,0.00065358983848623,-0.006,0.00090358983848623,-0.0059330127018922
cLn part,wMat,0.00090358983848623,-0.0059330127018922,0.0012188856287933,-0.0057509765924841
cLn part,wMat,0.0012188856287933,-0.0057509765924841,0.0025,-0.006
cLn part,wMat,0.0025,-0.006,0.0045857864376269,-0.006
cLn part,wMat,0.0045857864376269,-0.006,0.00825,-0.0096642135623731
cLn part,wMat,0.00825,-0.0096642135623731,0.00825,-0.013
cLn part,wMat,0.00825,-0.013,0.004,-0.013
cLn part,wMat,0.004,-0.013,0.004,-0.015
cLn part,wMat,0.004,-0.015,0.013,-0.015
cArc part,wMat,0.013,-0.015,0.014414213562373,-0.014414213562373,0.015,-0.013
cLn part,wMat,0.015,-0.013,0.015,-0.004
cLn part,wMat,0.015,-0.004,0.013,-0.004
cLn part,wMat,0.013,-0.004,0.013,-0.00825
cLn part,wMat,0.013,-0.00825,0.0096642135623731,-0.00825
cLn part,wMat,0.0096642135623731,-0.00825,0.006,-0.0045857864376269
cLn part,wMat,0.006,-0.0045857864376269,0.006,-0.00051961524227066
cLn part,wMat,0.006,-0.00051961524227066,0.0057,-6.6613381477509e-19
cLn part,wMat,0.0057,-6.6613381477509e-19,0.0059330127018922,0.00040358983848622
cArc part,wMat,0.0059330127018922,0.00040358983848622,0.006,0.00065358983848623,0.0059330127018922,0.00090358983848623
cLn part,wMat,0.0059330127018922,0.00090358983848623,0.0057509765924841,0.0012188856287933
cLn part,wMat,0.0057509765924841,0.0012188856287933,0.006,0.0025
cLn part,wMat,0.006,0.0025,0.006,0.0045857864376269
cLn part,wMat,0.006,0.0045857864376269,0.0096642135623731,0.00825
cLn part,wMat,0.0096642135623731,0.00825,0.013,0.00825
cLn part,wMat,0.013,0.00825,0.013,0.004
cLn part,wMat,0.013,0.004,0.015,0.004
cLn part,wMat,0.015,0.004,0.015,0.013
cArc part,wMat,0.015,0.013,0.014414213562373,0.014414213562373,0.013,0.015
cLn part,wMat,0.013,0.015,0.004,0.015
cLn part,wMat,0.004,0.015,0.004,0.013
cLn part,wMat,0.004,0.013,0.00825,0.013
cLn part,wMat,0.00825,0.013,0.00825,0.0096642135623731
cLn part,wMat,0.00825,0.0096642135623731,0.0045857864376269,0.006
cLn part,wMat,0.0045857864376269,0.006,0.00051961524227066,0.006
cLn part,wMat,0.00051961524227066,0.006,9.9920072216264e-19,0.0057
cLn part,wMat,9.9920072216264e-19,0.0057,-0.00040358983848622,0.0059330127018922
cArc part,wMat,-0.00040358983848622,0.0059330127018922,-0.00065358983848623,0.006,-0.00090358983848623,0.0059330127018922
cLn part,wMat,-0.00090358983848623,0.0059330127018922,-0.0012188856287933,0.0057509765924841
cLn part,wMat,-0.0012188856287933,0.0057509765924841,-0.0025,0.006
cLn part,wMat,-0.0025,0.006,-0.0045857864376269,0.006
cLn part,wMat,-0.0045857864376269,0.006,-0.00825,0.0096642135623731
cLn part,wMat,-0.00825,0.0096642135623731,-0.00825,0.013
cLn part,wMat,-0.00825,0.013,-0.004,0.013
cLn part,wMat,-0.004,0.013,-0.004,0.015
cLn part,wMat,-0.004,0.015,-0.013,0.015
cArc part,wMat,-0.013,0.015,-0.014414213562373,0.014414213562373,-0.015,0.013
cLn part,wMat,-0.015,0.013,-0.015,0.004
cArc part,wMat,0.0095390700706857,0.011338915743082,0.009861522368915,0.009861522368915,0.011338915743082,0.0095390700706857
cLn part,wMat,0.011338915743082,0.0095390700706857,0.012361530980687,0.0099188832824344
cArc part,wMat,0.012361530980687,0.0099188832824344,0.013043502884254,0.013043502884254,0.0099188832824344,0.012361530980687
cLn part,wMat,0.0099188832824344,0.012361530980687,0.0095390700706857,0.011338915743082
cArc part,wMat,0.011338915743082,-0.0095390700706857,0.009861522368915,-0.009861522368915,0.0095390700706857,-0.011338915743082
cLn part,wMat,0.0095390700706857,-0.011338915743082,0.0099188832824344,-0.012361530980687
cArc part,wMat,0.0099188832824344,-0.012361530980687,0.013043502884254,-0.013043502884254,0.012361530980687,-0.0099188832824344
cLn part,wMat,0.012361530980687,-0.0099188832824344,0.011338915743082,-0.0095390700706857
cArc part,wMat,-0.0099188832824344,0.012361530980687,-0.013043502884254,0.013043502884254,-0.012361530980687,0.0099188832824344
cLn part,wMat,-0.012361530980687,0.0099188832824344,-0.011338915743082,0.0095390700706857
cArc part,wMat,-0.011338915743082,0.0095390700706857,-0.009861522368915,0.009861522368915,-0.0095390700706857,0.011338915743082
cLn part,wMat,-0.0095390700706857,0.011338915743082,-0.0099188832824344,0.012361530980687
cArc part,wMat,-0.012361530980687,-0.0099188832824344,-0.013043502884254,-0.013043502884254,-0.0099188832824344,-0.012361530980687
cLn part,wMat,-0.0099188832824344,-0.012361530980687,-0.0095390700706857,-0.011338915743082
cArc part,wMat,-0.0095390700706857,-0.011338915743082,-0.009861522368915,-0.009861522368915,-0.011338915743082,-0.0095390700706857
cLn part,wMat,-0.011338915743082,-0.0095390700706857,-0.012361530980687,-0.0099188832824344
if (sw2007api=1) then
Part.SketchManager.InsertSketch True
else
Part.InsertSketch
End If
end sub

sub codeBag1(part)
Part.InsertSketch
Set swActiveMat = Part.GetActiveSketch()
swSketchMat= createMatFromSWMat(swActiveMat.ModelToSketchXForm)
mSkMat=createMat4x4FromValues(1,0,0,0,1,0,0,0,1,0,0,0)
wMat=mulMat4x4Mat4x4(swSketchMat,mSkMat)
cArc part,wMat,-0.0048,-0.0045,-0.004712132034356,-0.004712132034356,-0.0045,-0.0048
cLn part,wMat,-0.0045,-0.0048,-0.0026444335722963,-0.0048
cArc part,wMat,-0.0026444335722963,-0.0048,-0.0026156798465403,-0.0047986188595102,-0.0025871908736834,-0.0047944881550343
cLn part,wMat,-0.0025871908736834,-0.0047944881550343,-0.001742757301387,-0.0046303468962051
cArc part,wMat,-0.001742757301387,-0.0046303468962051,-0.0015685126249837,-0.0045266822072541,-0.0015,-0.0043358587411708
cLn part,wMat,-0.0015,-0.0043358587411708,-0.0015,-0.0035
cArc part,wMat,-0.0015,-0.0035,-0.0013743714581157,-0.003255879958638,-0.0011027027199663,-0.0032162162102973
cArc part,wMat,-0.0011027027199663,-0.0032162162102973,9.1250656061926e-12,-0.0034,0.0011027027027027,-0.0032162162162162
cArc part,wMat,0.0011027027027027,-0.0032162162162162,0.0013743714581157,-0.003255879958638,0.0015,-0.0035
cLn part,wMat,0.0015,-0.0035,0.0015,-0.0043358587411708
cArc part,wMat,0.0015,-0.0043358587411708,0.0015685126249837,-0.0045266822072541,0.001742757301387,-0.0046303468962051
cLn part,wMat,0.001742757301387,-0.0046303468962051,0.0025871908736834,-0.0047944881550343
cArc part,wMat,0.0025871908736834,-0.0047944881550343,0.0026156798465402,-0.0047986188595102,0.0026444335722963,-0.0048
cLn part,wMat,0.0026444335722963,-0.0048,0.0045,-0.0048
cArc part,wMat,0.0045,-0.0048,0.004712132034356,-0.004712132034356,0.0048,-0.0045
cLn part,wMat,0.0048,-0.0045,0.0048,-0.0026444335722963
cArc part,wMat,0.0048,-0.0026444335722963,0.0047986188595102,-0.0026156798465403,0.0047944881550343,-0.0025871908736834
cLn part,wMat,0.0047944881550343,-0.0025871908736834,0.0046303468962051,-0.001742757301387
cArc part,wMat,0.0046303468962051,-0.001742757301387,0.0045266822072541,-0.0015685126249837,0.0043358587411708,-0.0015
cLn part,wMat,0.0043358587411708,-0.0015,0.0035,-0.0015
cArc part,wMat,0.0035,-0.0015,0.003255879958638,-0.0013743714581157,0.0032162162102973,-0.0011027027199663
cArc part,wMat,0.0032162162102973,-0.0011027027199663,0.0034,-9.1250576592258e-12,0.0032162162162162,0.0011027027027027
cArc part,wMat,0.0032162162162162,0.0011027027027027,0.003255879958638,0.0013743714581157,0.0035,0.0015
cLn part,wMat,0.0035,0.0015,0.0043358587411708,0.0015
cArc part,wMat,0.0043358587411708,0.0015,0.0045266822072541,0.0015685126249837,0.0046303468962051,0.001742757301387
cLn part,wMat,0.0046303468962051,0.001742757301387,0.0047944881550343,0.0025871908736834
cArc part,wMat,0.0047944881550343,0.0025871908736834,0.0047986188595102,0.0026156798465402,0.0048,0.0026444335722963
cLn part,wMat,0.0048,0.0026444335722963,0.0048,0.0045
cArc part,wMat,0.0048,0.0045,0.004712132034356,0.004712132034356,0.0045,0.0048
cLn part,wMat,0.0045,0.0048,0.0026444335722963,0.0048
cArc part,wMat,0.0026444335722963,0.0048,0.0026156798465403,0.0047986188595102,0.0025871908736834,0.0047944881550343
cLn part,wMat,0.0025871908736834,0.0047944881550343,0.001742757301387,0.0046303468962051
cArc part,wMat,0.001742757301387,0.0046303468962051,0.0015685126249837,0.0045266822072541,0.0015,0.0043358587411708
cLn part,wMat,0.0015,0.0043358587411708,0.0015,0.0035
cArc part,wMat,0.0015,0.0035,0.0013743714581157,0.003255879958638,0.0011027027199663,0.0032162162102973
cArc part,wMat,0.0011027027199663,0.0032162162102973,-9.1250610487734e-12,0.0034,-0.0011027027027027,0.0032162162162162
cArc part,wMat,-0.0011027027027027,0.0032162162162162,-0.0013743714581157,0.003255879958638,-0.0015,0.0035
cLn part,wMat,-0.0015,0.0035,-0.0015,0.0043358587411708
cArc part,wMat,-0.0015,0.0043358587411708,-0.0015685126249837,0.0045266822072541,-0.001742757301387,0.0046303468962051
cLn part,wMat,-0.001742757301387,0.0046303468962051,-0.0025871908736834,0.0047944881550343
cArc part,wMat,-0.0025871908736834,0.0047944881550343,-0.0026156798465402,0.0047986188595102,-0.0026444335722963,0.0048
cLn part,wMat,-0.0026444335722963,0.0048,-0.0045,0.0048
cArc part,wMat,-0.0045,0.0048,-0.004712132034356,0.004712132034356,-0.0048,0.0045
cLn part,wMat,-0.0048,0.0045,-0.0048,0.0026444335722963
cArc part,wMat,-0.0048,0.0026444335722963,-0.0047986188595102,0.0026156798465403,-0.0047944881550343,0.0025871908736834
cLn part,wMat,-0.0047944881550343,0.0025871908736834,-0.0046303468962051,0.001742757301387
cArc part,wMat,-0.0046303468962051,0.001742757301387,-0.0045266822072541,0.0015685126249837,-0.0043358587411708,0.0015
cLn part,wMat,-0.0043358587411708,0.0015,-0.0035,0.0015
cArc part,wMat,-0.0035,0.0015,-0.003255879958638,0.0013743714581157,-0.0032162162102973,0.0011027027199663
cArc part,wMat,-0.0032162162102973,0.0011027027199663,-0.0034,-9.3289479442528e-19,-0.0032162162162162,-0.0011027027027027
cArc part,wMat,-0.0032162162162162,-0.0011027027027027,-0.003255879958638,-0.0013743714581157,-0.0035,-0.0015
cLn part,wMat,-0.0035,-0.0015,-0.0043358587411708,-0.0015
cArc part,wMat,-0.0043358587411708,-0.0015,-0.0045266822072541,-0.0015685126249837,-0.0046303468962051,-0.001742757301387
cLn part,wMat,-0.0046303468962051,-0.001742757301387,-0.0047944881550343,-0.0025871908736834
cArc part,wMat,-0.0047944881550343,-0.0025871908736834,-0.0047986188595102,-0.0026156798465402,-0.0048,-0.0026444335722963
cLn part,wMat,-0.0048,-0.0026444335722963,-0.0048,-0.0045
if (sw2007api=1) then
Part.SketchManager.InsertSketch True
else
Part.InsertSketch
End If
end sub

sub main
set swApp = Application.SldWorks
code = swApp.RevisionNumber
found = InStr(code, ".")
If (found > 0) Then
  code = Left(code, found-1)
  If (CInt(code) >= 11) Then
    sw2003api=1
  End If
  If (CInt(code) >= 15) Then
    sw2007api=1
  End If
  docVisible=1
  If (CInt(code) >= 18) Then
    docVisible=0
  End If
End If
swApp.SetUserPreferenceToggle 11, FALSE
swApp.SetUserPreferenceToggle 97, FALSE
storePath=BrowseForFolder
If (storePath <> "") Then
   If ((Right(storePath, 1) <> "\") And (Right(storePath, 1) <> "/")) Then
       storePath = storePath + "\"
   End If
   createPart0
End If
end sub
